<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.javaee</groupId>
	<artifactId>AssignmentProject</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>JavaEE 7 simple archetype</name>
	<description>JavaEE 7 WAR project. Nice starting point for testable java ee 7 apps.</description>
	<packaging>war</packaging>

	<properties>
		<java.min.version>1.8</java.min.version>
		<maven.min.version>3.0.0</maven.min.version>
		<version.javaee_api>7.0</version.javaee_api>
		<version.junit>4.11</version.junit>
		<version.org.jboss.arquillian>1.1.7.Final</version.org.jboss.arquillian>
		<version.wildfly>9.0.1.Final</version.wildfly>

		<!-- We list the maven plugin versions explicitly -->
		<!-- You can also move the version definitions from properties to build/plugins/plugin/version directly but this is easier to find and identify in case of build issues -->
		<!-- In case you upgrade to a multi-module project later, ALWAYS move all properties, dependency management and build plugin definitions to common parent project -->
		<version.compiler.plugin>3.1</version.compiler.plugin>
		<version.war.plugin>2.5</version.war.plugin>
		<version.surefire.plugin>2.10</version.surefire.plugin>
	</properties>

	<prerequisites>
		<maven>${maven.min.version}</maven>
	</prerequisites>

	<dependencyManagement>
		<dependencies>
			<!-- Arquillian lets test you your applications in real environment -->
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${version.org.jboss.arquillian}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.wildfly.arquillian</groupId>
				<artifactId>wildfly-arquillian-container-managed</artifactId>
				<scope>test</scope>
				<version>1.0.1.Final</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- To start with java ee 7, this is the only dependency that we need -->
	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${version.javaee_api}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Useful libraries -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>

		<!-- Dependencies for testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
			<version>${version.junit}</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> -->
		<!-- <groupId>org.jboss.arquillian.protocol</groupId> -->
		<!-- <artifactId>arquillian-protocol-servlet</artifactId> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->
		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-impl-maven</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- You could omit these, but it is always better to be explicit in describing how your project is built. Especially if you work in a team. -->
	<build>
		<plugins>
			<!-- Our build is simple, we want a war file that contains classes compiled with JDK 1.8 and in UTF-8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${java.min.version}</source>
					<target>${java.min.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${version.war.plugin}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>schema-gen</id>
			<build>
				<plugins>
					<plugin>
						<groupId>de.juplo</groupId>
						<artifactId>hibernate4-maven-plugin</artifactId>
						<version>1.1.0</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>export</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<outputFile>${project.build.directory}/schema/schema.sql</outputFile>
							<target>SCRIPT</target>
							<skip>false</skip>
							<delimiter>;</delimiter>
							<hibernateDialect>org.hibernate.dialect.H2Dialect</hibernateDialect>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Arquillian profile for testing in managed wildfly server. -->
		<profile>
			<id>wildfly-managed-arquillian</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<skip>${maven.test.skip}</skip>
						</configuration>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>${version.wildfly}</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<jboss.home>${project.build.directory}/wildfly-${version.wildfly}</jboss.home>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
